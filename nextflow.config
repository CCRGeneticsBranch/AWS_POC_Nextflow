nextflow.enable.dsl = 2
nextflowVersion = '>=20'

profiles {

// test profile name needs to change to AWS. 
// Add reference files to s3 buckets as we test on ec2 instance

    aws_agc_test {
    
        env.SLURM_JOB_ID = ""
        
        docker {
            enabled = true
            envWhitelist = 'SLURM_JOB_ID'
        }
        
        includeConfig 'config/docker.config'
        
        def report_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
        
        report {
            enabled = true
            overwrite = true
            file = "s3://agc-424336837382-us-east-1/nfmvpout_vnk/reports/report_${report_timestamp}.html"
        }
        
        trace {
            enabled = true
            overwrite = true
            file = "s3://agc-424336837382-us-east-1/nfmvpout_vnk/reports/pipeline_trace.txt"
        }
        
        timeline {
            enabled = true
            overwrite = true
            file = "s3://agc-424336837382-us-east-1/nfmvpout_vnk/reports/timeline_${report_timestamp}.html"
        }
        
        params {
            publishDirMode = "copy"
            fusioncatcher_db = "s3://ccr-genomics-testdata/References/fusioncatcher/human_v108"
            genome="s3://ccr-genomics-testdata/References/GRCh37/GRCh37.primary_assembly.genome_ERCC92_ksorted.fa"
            gtf = "s3://ccr-genomics-testdata/References/gencode.v37lift37.annotation_ERCC92.gtf"
            reads = "s3://ccr-genomics-testdata/testdata/Test*_R_T_R{1,2}.fastq.gz"
            resultsdir = "s3://agc-424336837382-us-east-1/nfmvpout_vnk"
            fusioncatcher_db = "s3://ccr-genomics-testdata/References/fusioncatcher/human_v108"
            mixcr_license = "s3://ccr-genomics-testdata/Licenses/mi.license"
            starfusion_db = "s3://ccr-genomics-testdata/References/STARfusion/GRCh37_gencode_v19_CTAT_lib_Mar012021.plug-n-play/ctat_genome_lib_build_dir/"
            rsem_index = "s3://ccr-genomics-testdata/References/rsem_1.3.2"
            star_genome_index = "s3://ccr-genomics-testdata/References/index-STAR_2.7.9a"
        }
        process {
            cpus = 2
            memory = '3 GB'

            withName: Arriba {
               cpus = 8
               memory = '92 GB'
               time = '5h'
           }    

            withName: Star {
               cpus = 8
               memory = '92 GB'
               time = '5h'
           }    
           
            withName: Fusioncatcher {
               cpus = 8
               memory = '92 GB'
               time = '5h'
           }   
        }
    }

    biowulf_test_run_local {

        params {
            config_profile_description = 'BIOWULF small test on LOCAL interactive node'
            config_profile_contact = 'kopardevn@nih.gov'
            // config_profile_url = 'https://hpc.nih.gov/apps/nextflow.html'
            max_memory = '20.GB'
            max_cpus = '3' 
            max_time = '4h'
        }
        includeConfig 'config/biowulf_small_test_params.config'
        includeConfig 'config/docker.config'
        includeConfig 'config/biowulf_singularity.config'
	    workDir = "$OUTDIR/work.$OUTTAG"
	    //resultsDir = "$OUTDIR/results"
        process {
            executor = 'local'
        }
    }

    biowulf_test_run_slurm {
        params {
            includeConfig 'config/docker.config'
            config_profile_description = 'BIOWULF small test on SLURM'
            config_profile_contact = 'kopardevn@nih.gov'
            config_profile_url = 'https://hpc.nih.gov/apps/nextflow.html'
            max_memory = '20.GB'
            max_cpus = '3' 
            max_time = '4h'
        }
        includeConfig 'config/biowulf_small_test_params.config'
        includeConfig 'config/docker.config'
        includeConfig 'config/biowulf_singularity.config'
        includeConfig 'config/biowulf_cluster_test.config'
	    workDir = "$OUTDIR/work.$OUTTAG"
	    //resultsDir = "$OUTDIR/results"
    }

}

